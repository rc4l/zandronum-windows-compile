name: Build Windows (Latest)

on:
  workflow_dispatch: # Allows you to trigger the workflow manually from the Actions tab

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Mercurial
        run: |
          Write-Host "Installing Mercurial via winget..."
          winget install Mercurial.Mercurial -e --accept-package-agreements --accept-source-agreements
          Write-Host "Refreshing PATH to include Mercurial..."
          $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")
          Write-Host "Verifying Mercurial installation..."
          hg version

      - name: Write build date badge JSON
        if: ${{ success() }}
        run: |
          $date = Get-Date -Format "yyyy-MM-dd HH:mm"
          $json = "{ `"schemaVersion`": 1, `"label`": `"last build`", `"message`": `"$date UTC`", `"color`": `"blue`" }"
          Set-Content -Path build-date-badge.json -Value $json

      - name: Run Zandronum build script
        shell: pwsh
        run: |
          ./build.ps1

      - name: Write Zandronum version badge JSON
        if: ${{ success() }}
        run: |
          # Get current Zandronum revision info using hg
          cd src/zandronum
          $revision = hg identify --id
          $branch = hg branch
          $tags = hg log -r . --template "{tags}"
          
          # Use tag if available, otherwise use branch and short revision
          if ($tags -and $tags -ne "tip") {
            $version = $tags
          } else {
            $shortRev = $revision.Substring(0, [Math]::Min(12, $revision.Length))
            $version = "$branch-$shortRev"
          }
          
          $json = "{ `"schemaVersion`": 1, `"label`": `"zandronum`", `"message`": `"$version`", `"color`": `"orange`" }"
          Set-Content -Path ../../zandronum-version-badge.json -Value $json
          
      - name: Push badge files to badges branch
        if: ${{ success() }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin badges || true
          git checkout -B badges
          git add build-date-badge.json zandronum-version-badge.json
          git commit -m "Update badges" || exit 0
          Write-Host "Setting remote URL with GITHUB_TOKEN..."
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          Write-Host "Pushing to badges branch..."
          git push origin badges --force