name: Manual Windows Build

on:
  workflow_dispatch: # Allows you to trigger the workflow manually from the Actions tab

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write build date badge JSON
        if: ${{ success() }}
        run: |
          $date = Get-Date -Format "yyyy-MM-dd HH:mm"
          $json = "{ `"schemaVersion`": 1, `"label`": `"last build`", `"message`": `"$date UTC`", `"color`": `"blue`" }"
          Set-Content -Path build-date-badge.json -Value $json

      - name: Run Zandronum build script
        shell: pwsh
        run: |
          ./build.ps1

      - name: Write Zandronum version badge JSON
        if: ${{ success() }}
        run: |
          $tagLine = Get-Content src/zandronum/.hgtags | Where-Object { $_.Trim() -ne "" } | Select-Object -Last 1
          if ($tagLine) {
            $version = $tagLine -split " " | Select-Object -Last 1
          } else {
            $version = "unknown"
          }
          $json = "{ `"schemaVersion`": 1, `"label`": `"zandronum`", `"message`": `"$version`", `"color`": `"orange`" }"
          Set-Content -Path zandronum-version-badge.json -Value $json
      - name: Debug GH_PAT
        run: |
          if ($env:GH_PAT) { 
            Write-Host "✅ GH_PAT is set ($($env:GH_PAT.Length) chars)" 
          } else { 
            Write-Host "❌ GH_PAT is not set" 
          }
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
      - name: Push badge files to badges branch
        if: ${{ success() }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin badges || true
          git checkout -B badges
          git add build-date-badge.json zandronum-version-badge.json
          git commit -m "Update badges" || exit 0
          Write-Host "Setting remote URL with token..."
          git remote set-url origin "https://x-access-token:$env:GH_PAT@github.com/${{ github.repository }}"
          Write-Host "Pushing to badges branch..."
          git push origin badges --force